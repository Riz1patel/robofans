{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","Fragment","className","src","id","alt","name","email","CardList","robos","cardArray","map","userList","i","Searchbox","type","onChange","textChangeProps","placeholder","App","textChange","event","setState","searchField","target","value","state","fetch","then","res","json","result","roboList","this","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAceA,EAZF,SAACC,GACV,OACA,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,mDAAf,UACJ,qBAAKC,IAAG,+BAA4BH,EAAMI,IAAMC,IAAI,cACnD,6BAAKL,EAAMM,OAFR,IAGJ,4BAAIN,EAAMO,QAHN,UCFKC,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAGhBC,EAAYD,EAAME,KAAI,SAASC,EAASC,GAC1C,OAAO,cAAC,EAAD,CAAOT,GAAIK,EAAMI,GAAGT,GAAIE,KAAMG,EAAMI,GAAGP,KAAMC,MAAOE,EAAMI,GAAGN,OAAYM,MAGpF,OACQ,8BACCH,KCVAI,EAAY,SAACd,GACtB,OACI,gCACI,uBAAOe,KAAK,OAAOb,UAAU,gBAAgBc,SAAUhB,EAAMiB,gBAAiBC,YAAY,gBAC1F,uBAAM,2BC+CHC,E,kDA7Cf,aAAc,IAAD,8BACX,gBAmBFC,WAAY,SAACC,GACX,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAnBxC,EAAKC,MAAO,CACVH,YAAY,GACZd,MAAM,IAJG,E,qDAUb,WAAoB,IAAD,OACjBkB,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACb,MAAMsB,S,oBAQzB,WAAS,IAAD,OACIC,EAAWC,KAAKP,MAAMjB,MAAMyB,QAAO,SAACzB,GAC1C,OAAOA,EAAMH,KAAK6B,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAGlE,OAAuB,IAApBH,EAASK,OACH,2CAIL,sBAAKnC,UAAU,KAAf,UACE,2CACA,cAAC,EAAD,CAAWe,gBAAiBgB,KAAKb,aACjC,cAAC,EAAD,CAAUX,MAAOuB,IACI,IAApBA,EAASK,OAAe,oDAA6B,U,GAvC9CC,IAAMC,WCKTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.528b3510.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) =>{      //Using also Destructuring instead of props like {id,name,email}\r\n    return(\r\n    <React.Fragment>\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n    <img src = {`https://robohash.org/${props.id}`} alt=\"roboImage\" />\r\n     <h2>{props.name}</h2> {/*{name} */}\r\n    <p>{props.email}</p> {/*{email} */}\r\n    </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport const CardList = ({robos}) =>{\r\n\r\n    //Using a map function we can get all arraylist and return the 'Card' Component\r\n    const cardArray = robos.map(function(userList,i) {      \r\n        return <Card  id={robos[i].id} name={robos[i].name} email={robos[i].email} key={i}/>\r\n    })\r\n    \r\n    return(\r\n            <div>\r\n            {cardArray}\r\n\r\n            {/* <Card id={robos[1].id} name={robos[1].name} email={robos[1].email}/>\r\n            <Card id={robos[2].id} name={robos[2].name} email={robos[2].email}/> */}\r\n           \r\n            </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Searchbox = (props) => {\r\n    return (\r\n        <div>\r\n            <input type=\"text\" className='w-25 b--solid' onChange={props.textChangeProps} placeholder='search here'/>\r\n            <br /><br />\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React from 'react';\nimport { CardList } from '../components/CardList';\nimport {Searchbox} from '../components/Searchbox';   \n// import {robos} from '../components/robos';     \n\n\nclass App extends React.Component {\nconstructor(){\n  super()\n  this.state ={        \n    searchField:'',\n    robos:[]\n    // robos:robos     \n  }\n}\n\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(res =>{\n    return res.json();\n  })\n  .then(result =>{\n    this.setState({robos:result});\n  })\n}\n\ntextChange =(event) => {  \n  this.setState({searchField:event.target.value}) \n}\n\nrender(){\n      const roboList = this.state.robos.filter((robos) => {\n      return robos.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    })\n\n    if(roboList.length === 0){\n      return <b>Loading...</b>      \n    }\n    else{\n      return (\n        <div className='tc'>\n          <h1>Robo-Fans</h1>\n          <Searchbox textChangeProps={this.textChange} />      \n          <CardList robos={roboList} />\n          {roboList.length === 0 ? <b>No records found...</b> : ''}\n        </div>\n      );  \n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport tachyons from 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}